SELECT location, date, total_cases, new_cases, total_deaths, population 
FROM PortfolioProject..CovidDeaths
ORDER BY 1,2 

SELECT *
FROM PortfolioProject..CovidDeaths
WHERE continent is NOT NULL 
Order By 3,4

-- Looking at Total Cases vs Total Deaths 
--Shows the likelihood of dying if you contract covid in your country
SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as DeathPercentage 
FROM PortfolioProject..CovidDeaths
WHERE location LIKE '%states%'
ORDER BY 1,2 

--Looking at the Total Cases vs Population 
--Shows what percentage of population got covid 
SELECT location, date, total_cases, population, (total_cases/population)*100 as PercentPopulationInfected
FROM PortfolioProject..CovidDeaths
WHERE location LIKE '%states%' 
ORDER BY 1, 2

--Looking at the contries with the Highest Infection Rate compared to population 

Select location, population, MAX(total_cases) as HighestInfectionCount, MAX ((total_cases/population))*100 as PercentPopulationInfected
FROM PortfolioProject..CovidDeaths
GROUP BY location, population
ORDER BY PercentPopulationInfected DESC

--Showing Countries with Highest Death Count per Population 

SELECT Location, MAX (cast (Total_deaths as int)) as TotalDeathCount 
FROM PortfolioProject..CovidDeaths
WHERE continent is not null 
GROUP BY LOCATION
ORDER BY TotalDeathCount DESC 

--LET'S BREAK THINGS DOWN BY CONTINENT 

SELECT continent, MAX (cast (Total_deaths as int)) as TotalDeathCount 
FROM PortfolioProject..CovidDeaths
WHERE continent is Not Null 
GROUP BY continent
ORDER BY TotalDeathCount DESC 

-- Showing the continents with the highest death count 

SELECT continent, MAX (cast (Total_deaths as int)) as TotalDeathCount 
FROM PortfolioProject..CovidDeaths
WHERE continent is Not Null 
GROUP BY continent
ORDER BY TotalDeathCount DESC 

--Global Numbers

SELECT SUM (new_cases) as total_cases, SUM (cast(new_deaths as int)) as total_deaths, SUM(cast 
(new_deaths as int))/SUM(New_Cases)*100 as DeathPercentage 
FROM PortfolioProject..CovidDeaths
WHERE continent is NOT NULL 
--GROUP BY date 
ORDER BY 1,2 

--Looking at Total Population vs Vaccinations 
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM (CONVERT(int,vac.new_vaccinations)) OVER (Partition By dea.location Order By dea.location,dea.Date) 
as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population*100
FROM PortfolioProject..CovidDeaths dea
JOIN PortfolioProject.. CovidVaccinations vac
ON dea.location=vac.location 
AND dea.date=vac.date 
WHERE dea.continent IS NOT NULL 
Order By 2,3 

-- USE CTE 
With PopvsVac (Continent, Location, Date, Population, New_Vaccinations, RollingPeopleVaccinated) 
as
(
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM (CONVERT(int,vac.new_vaccinations)) OVER (Partition By dea.location Order By dea.location,
dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population*100
FROM PortfolioProject..CovidDeaths dea
JOIN PortfolioProject.. CovidVaccinations vac
ON dea.location=vac.location 
AND dea.date=vac.date 
WHERE dea.continent IS NOT NULL 
--Order By 2,3 
)
SELECT *, (RollingPeopleVaccinated/Population) *100 
FROM PopvsVac


--Temp Table
Create Table #PercentPopulationVaccinated
(
Continent nvarchar(255), 
Location nvarchar (255),
Date datetime,
Population numeric,
New_vaccinations numeric,
RollingPeopleVaccinated numeric
)

INSERT INTO #PercentPopulationVaccinated
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM (CONVERT(int,vac.new_vaccinations)) OVER (Partition By dea.location Order By dea.location,
dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population*100
FROM PortfolioProject..CovidDeaths dea
JOIN PortfolioProject.. CovidVaccinations vac
ON dea.location=vac.location 
AND dea.date=vac.date 
WHERE dea.continent IS NOT NULL 
--Order By 2,3 

SELECT *, (RollingPeopleVaccinated/Population) *100 
FROM #PercentPopulationVaccinated

--Creating view to store data for later visulizations 

CREATE VIEW PercentPopulationVaccinated as 
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM (CONVERT(int,vac.new_vaccinations)) OVER (Partition By dea.location Order By dea.location,
dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population*100
FROM PortfolioProject..CovidDeaths dea
JOIN PortfolioProject.. CovidVaccinations vac
ON dea.location=vac.location 
AND dea.date=vac.date 
WHERE dea.continent IS NOT NULL 
--Order By 2,3 
